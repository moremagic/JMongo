/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DBConectDialog.java
 *
 * Created on 2011/03/04, 11:54:06
 */
package jmongo.gui;

import java.awt.Component;
import javax.swing.*;
import jmongo.config.ConectionConfig;
import jmongo.config.DBConnectionBean;

/**
 * 接続設定ダイアログ
 *
 * @author Administrator
 */
public class DBConectDialog extends JDialog {

    private ConectionConfig m_pro = null;
    private DBConnectionBean ret = null;

    /**
     * Creates new form DBConectDialog
     */
    public DBConectDialog() {
        initComponents();
        //Dialog icon
        super.setIconImage(new ImageIcon(getClass().getResource("/jmongo/icon/famfamfam_silk_icons_v013/icons/database_connect.png")).getImage());
        
        m_pro = new ConectionConfig();
        setLocationRelativeTo(null);
        createList();
    }

    /**
     * 接続設定リストの初期化
     */
    private void createList() {
        if (m_pro == null) {
            return;
        }

        DefaultListModel lm = new DefaultListModel();
        for (String s : m_pro.getConfigList()) {
            lm.addElement(s);
        }
        this.jList1.setModel(lm);

        jList1.setCellRenderer(new _CellRenderer());


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextField00 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Connection List");
        setLocationByPlatform(true);
        setModal(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setLayout(new java.awt.BorderLayout());

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel6.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(6, 0, 10, 10));

        jPanel9.setLayout(new java.awt.BorderLayout());

        jLabel4.setText("設定名称");
        jLabel4.setPreferredSize(new java.awt.Dimension(80, 13));
        jPanel9.add(jLabel4, java.awt.BorderLayout.WEST);

        jTextField00.setPreferredSize(new java.awt.Dimension(200, 19));
        jPanel9.add(jTextField00, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel9);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("接続先ホスト名");
        jLabel1.setPreferredSize(new java.awt.Dimension(80, 13));
        jPanel3.add(jLabel1, java.awt.BorderLayout.WEST);

        jTextField1.setPreferredSize(new java.awt.Dimension(200, 19));
        jPanel3.add(jTextField1, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel3);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jLabel2.setText("ポート番号");
        jLabel2.setPreferredSize(new java.awt.Dimension(80, 13));
        jPanel4.add(jLabel2, java.awt.BorderLayout.WEST);

        jTextField2.setPreferredSize(new java.awt.Dimension(200, 19));
        jPanel4.add(jTextField2, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel4);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jLabel3.setText("接続DB名");
        jLabel3.setPreferredSize(new java.awt.Dimension(80, 13));
        jPanel5.add(jLabel3, java.awt.BorderLayout.WEST);

        jTextField3.setPreferredSize(new java.awt.Dimension(200, 19));
        jPanel5.add(jTextField3, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel5);

        jPanel12.setLayout(new java.awt.BorderLayout());

        jLabel5.setText("DBユーザ");
        jLabel5.setPreferredSize(new java.awt.Dimension(80, 13));
        jPanel12.add(jLabel5, java.awt.BorderLayout.WEST);

        jTextField4.setPreferredSize(new java.awt.Dimension(200, 19));
        jPanel12.add(jTextField4, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel12);

        jPanel13.setLayout(new java.awt.BorderLayout());

        jLabel6.setText("DBパスワード");
        jLabel6.setPreferredSize(new java.awt.Dimension(80, 13));
        jPanel13.add(jLabel6, java.awt.BorderLayout.WEST);

        jTextField5.setPreferredSize(new java.awt.Dimension(200, 19));
        jPanel13.add(jTextField5, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel13);

        jPanel7.add(jPanel2);

        jPanel6.add(jPanel7, java.awt.BorderLayout.CENTER);

        jPanel8.setLayout(new java.awt.GridLayout(1, 0));

        jButton2.setText("connect");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton2);

        jPanel8.add(jPanel11);

        jButton1.setText("save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel10.add(jButton1);

        jButton3.setText("cancel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel10.add(jButton3);

        jPanel8.add(jPanel10);

        jPanel6.add(jPanel8, java.awt.BorderLayout.SOUTH);

        jPanel1.add(jPanel6, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String key = jTextField00.getText();
        String host = jTextField1.getText();
        String port = jTextField2.getText();
        String dbname = jTextField3.getText();
        String dbuser = jTextField4.getText();
        String dbpasswd = jTextField5.getText();

        if (key.trim().length() > 0) {
            m_pro.setConfig(key, host, Integer.parseInt(port), dbname, dbuser, dbpasswd);
            createList();
        } else {
            JOptionPane.showMessageDialog(null, "設定がありません", "接続設定を入力してください", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        //プロパティの保管
        m_pro.save();
    }//GEN-LAST:event_formWindowClosed

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        // TODO add your handling code here:

        String key = (String) jList1.getSelectedValue();
        if (key != null) {
            DBConnectionBean value = m_pro.getProperty(key);
            jTextField00.setText(key);
            jTextField1.setText(value.getM_host());
            jTextField2.setText(Integer.toString(value.getM_port()));
            jTextField3.setText(value.getM_DBName());
            jTextField4.setText(value.getM_DBUser());
            jTextField5.setText(value.getM_DBPass());
        }
    }//GEN-LAST:event_jList1ValueChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //設定の更新
        jButton1ActionPerformed(evt);

        String key = jTextField00.getText();
        if (key != null && key.length() > 0) {
            ret = m_pro.getProperty(key);
            this.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(null, "設定が選択されていません", "接続設定を選択してください", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:

        //ダブルクリックで開く
        if (evt.getClickCount() == 2) {
            jButton2ActionPerformed(null);
        }
    }//GEN-LAST:event_jList1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new DBConectDialog().setVisible(true);
            }
        });
    }

    public DBConnectionBean getConnectionConfing() {
        return ret;
    }

    public String getConnectionConfingName() {
        return jTextField00.getText();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField00;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables

    public class _CellRenderer extends DefaultListCellRenderer {

        /**
         * リスト内のセルを描画方法を決定するメソッドです． リスト中の文字列は <UL> <LI>１文字目がアイコン用インデックス
         * <LI>２文字目が実際の表示内容 </UL> というように定義します．
         *
         * @param l ペイントしているリスト
         * @param value list.getModel().getElementAt(index)によって返される値
         * @param modelIndex セルのインデックス
         * @param isSelected 指定のセルが選択された場合にtrue
         * @param cellHasFocus 指定のセルにフォーカスがある場合にtrue
         * @return 指定の値を描画するpaint()メソッドがあるコンポーネント
         * @see javax.swing.ListCellRenderer
         * @see javax.swing.DefaultListCellRenderer
         */
        public Component getListCellRendererComponent(JList l, Object value, int modelIndex, boolean isSelected, boolean cellHasFocus) {

            // リスト内のセル
            Component c;

            // リスト内のセルを取得
            c = super.getListCellRendererComponent(l, (String) value, modelIndex, isSelected, cellHasFocus);

            // 表示アイコンの設定
            setIcon(new ImageIcon(getClass().getResource("/jmongo/icon/famfamfam_silk_icons_v013/icons/disconnect.png")));
            
            // 好みによって文字列の位置を調節
            setVerticalTextPosition(SwingConstants.BOTTOM);

            return c;
        }
    }
}
